/*! `tr-lang` grammar compiled for Highlight.js 11.3.1 */
(()=>{var e=(()=>{"use strict";return e=>{const n={begin:/\\[tnr"'\\\n\t]/,
scope:"char.escape",relevance:0};return{name:"tr-lang",aliases:["trl"],
unicodeRegex:!0,keywords:{
$pattern:/[^\t\r \n"':?=<>!\/%\*@,\d-][^\t\r \n"':?=<>!\/%\*@,]+/i,
keyword:["at","ver","de","ise","son","iken","yoksa","kpy","tks","\xfcst","veya","ve","d\xf6n","girdi","i\u015flev","y\xfckle"],
literals:["do\u011fru","yanl\u0131\u015f"]},contains:[{className:"string",
contains:[n],variants:[{begin:"'",end:"'",contains:[n]},{scope:"string",
begin:'"',end:'"',contains:[n]}]},{className:"operator",variants:[{
scope:"operator",match:/->|=\?|:\?|:\./},{scope:"operator",match:/[@\+\*%>=!<]/
}]},{className:"number",begin:/\d+(\.\d*)?/},{scope:"comment",begin:/#/,end:/$/
},{scope:"comment",begin:/-\*/,end:/\*-/,relevance:10}]}}})()
;hljs.registerLanguage("tr-lang",e)})();